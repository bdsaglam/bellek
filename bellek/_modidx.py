# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/bellek',
                'doc_host': 'https://bdsaglam.github.io',
                'git_url': 'https://github.com/bdsaglam/bellek',
                'lib_path': 'bellek'},
  'syms': { 'bellek.ml.cocoop': { 'bellek.ml.cocoop.ClipClassificationHead': ( 'ml.cocoop.html#clipclassificationhead',
                                                                               'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipClassificationHead.__init__': ( 'ml.cocoop.html#clipclassificationhead.__init__',
                                                                                        'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipClassificationHead.forward': ( 'ml.cocoop.html#clipclassificationhead.forward',
                                                                                       'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipVisualEncoder': ('ml.cocoop.html#clipvisualencoder', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipVisualEncoder.__init__': ( 'ml.cocoop.html#clipvisualencoder.__init__',
                                                                                   'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipVisualEncoder.forward': ( 'ml.cocoop.html#clipvisualencoder.forward',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner': ('ml.cocoop.html#promptlearner', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner.__init__': ( 'ml.cocoop.html#promptlearner.__init__',
                                                                               'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner.forward': ('ml.cocoop.html#promptlearner.forward', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip': ('ml.cocoop.html#promptlearningclip', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip.__init__': ( 'ml.cocoop.html#promptlearningclip.__init__',
                                                                                    'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip.forward': ( 'ml.cocoop.html#promptlearningclip.forward',
                                                                                   'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder': ( 'ml.cocoop.html#promptlearningtextencoder',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder.__init__': ( 'ml.cocoop.html#promptlearningtextencoder.__init__',
                                                                                           'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder.forward': ( 'ml.cocoop.html#promptlearningtextencoder.forward',
                                                                                          'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder': ('ml.cocoop.html#textencoder', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder.__init__': ('ml.cocoop.html#textencoder.__init__', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder.forward': ('ml.cocoop.html#textencoder.forward', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.get_clip_preprocess': ('ml.cocoop.html#get_clip_preprocess', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.make_prompt_learning_clip': ( 'ml.cocoop.html#make_prompt_learning_clip',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.prepare_prompt_learning_clip': ( 'ml.cocoop.html#prepare_prompt_learning_clip',
                                                                                     'bellek/ml/cocoop.py')},
            'bellek.ml.evaluation': { 'bellek.ml.evaluation.classification_summary': ( 'ml.evaluation.html#classification_summary',
                                                                                       'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.evaluate_slmc': ('ml.evaluation.html#evaluate_slmc', 'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.find_binary_clf_threshold': ( 'ml.evaluation.html#find_binary_clf_threshold',
                                                                                          'bellek/ml/evaluation.py')},
            'bellek.ml.layer': { 'bellek.ml.layer.GradReverse': ('ml.layer.html#gradreverse', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.__init__': ('ml.layer.html#gradreverse.__init__', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.forward': ('ml.layer.html#gradreverse.forward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad': ('ml.layer.html#reverse_grad', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.backward': ('ml.layer.html#reverse_grad.backward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.forward': ('ml.layer.html#reverse_grad.forward', 'bellek/ml/layer.py')},
            'bellek.ml.loss': { 'bellek.ml.loss.BinaryFocalLoss': ('ml.loss.html#binaryfocalloss', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.__init__': ('ml.loss.html#binaryfocalloss.__init__', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.activation': ( 'ml.loss.html#binaryfocalloss.activation',
                                                                               'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.decodes': ('ml.loss.html#binaryfocalloss.decodes', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.forward': ('ml.loss.html#binaryfocalloss.forward', 'bellek/ml/loss.py')},
            'bellek.ml.vision': { 'bellek.ml.vision.Make3Channel': ('ml.vision.html#make3channel', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__call__': ('ml.vision.html#make3channel.__call__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__repr__': ('ml.vision.html#make3channel.__repr__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform': ('ml.vision.html#torchvisiontransform', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.__init__': ( 'ml.vision.html#torchvisiontransform.__init__',
                                                                                      'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.encodes': ( 'ml.vision.html#torchvisiontransform.encodes',
                                                                                     'bellek/ml/vision.py')},
            'bellek.testing': { 'bellek.testing.fixture_directory': ('testing.html#fixture_directory', 'bellek/testing.py'),
                                'bellek.testing.fixture_path': ('testing.html#fixture_path', 'bellek/testing.py')},
            'bellek.utils': { 'bellek.utils.Path.ls_sorted': ('utils.html#path.ls_sorted', 'bellek/utils.py'),
                              'bellek.utils.apply_nested': ('utils.html#apply_nested', 'bellek/utils.py'),
                              'bellek.utils.flatten_dict': ('utils.html#flatten_dict', 'bellek/utils.py'),
                              'bellek.utils.generate_time_id': ('utils.html#generate_time_id', 'bellek/utils.py'),
                              'bellek.utils.get_node': ('utils.html#get_node', 'bellek/utils.py'),
                              'bellek.utils.most_common': ('utils.html#most_common', 'bellek/utils.py'),
                              'bellek.utils.resolve_path': ('utils.html#resolve_path', 'bellek/utils.py'),
                              'bellek.utils.set_dir': ('utils.html#set_dir', 'bellek/utils.py')}}}
