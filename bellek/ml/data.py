# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/ml.data.ipynb.

# %% auto 0
__all__ = ['ZippedDataset', 'ZippedDataLoader', 'fetch_imagenet_label_synsets', 'make_imagenet_label_map',
           'get_imagenet_label_map']

# %% ../../nbs/ml.data.ipynb 3
class ZippedDataset:
    def __init__(self, *datasets):
        self.datasets = datasets
    
    def __getitem__(self, idx):
        return tuple(ds[idx] for ds in self.datasets)
    
    def __len__(self):
        return min(len(ds) for ds in self.datasets)

# %% ../../nbs/ml.data.ipynb 4
class ZippedDataLoader:
    def __init__(self, *data_loaders):
        self.data_loaders = data_loaders

    def __iter__(self):
        self.it = iter(zip(*self.data_loaders))
        return self

    def __next__(self):
        return next(self.it)

# %% ../../nbs/ml.data.ipynb 5
def fetch_imagenet_label_synsets(url='https://raw.githubusercontent.com/torch/tutorials/master/7_imagenet_classification/synset_words.txt'):
    from urllib.request import urlopen
    with urlopen(url) as f:
        return f.read().decode()

def make_imagenet_label_map(label_synset):
    lines = label_synset.splitlines()
    return dict(line.strip().split(' ', 1) for line in lines if line.strip())

def get_imagenet_label_map():
    return make_imagenet_label_map(fetch_imagenet_label_synsets())
